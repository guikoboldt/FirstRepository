npm install -> instala pacotes no node
npm install -D -> instala pacotes apenas para o desenvolvimento
npm @types/pacote -D -> instala as definições de tipos (typescript), caso seja necessario (fazer isso somente em dev)
npm ts-node-dev -D -> pacote para fazer o node observar mudanças no codigo e aplica-las automaticamente


npx ts-node file -> executa pacote instalado (melhor que executar todo o path do bin do pacote
npx tsc --init: inicializa o typescript, criando o arquivo de configuração do typescript
npx create-react-app nome_project --template=typescript -> baixa os pacotes e cria um projeto react com todas as configurações necesarias para rodar, o template traz as configurações necessarias para o typescript

package.json
	scripts: pode-se adicionar automatizações para facilitar o dev
				"dev": "ts-node-dev .\\src\\server.ts" -> torna a execução mais simples do node (passa a ser 'npm run dev' ao inves de 'npx ts-node-dev /src/server.ts')

//GET: Buscar uma ou mais informações do back-end
//POST: Criar uma nova informação no back-end
//PUT: Atualizar uma informação existente no back-end
//DELETE: Remover uma informaçao do back-end

//POST http://localhost:3333/users = criar um usuario
//GET http://localhost:3333/users = Listar usuarios
//GET http://localhost:3333/users/5 = Buscar dadods do usuario com ID 5

//Request Param: Parametros que vem na propria rota que identificam um recurso
//Query Param: Parametros que vem na propria rota geralmente opicionais para filtros, páginação
//Request Body: Parametros para criação/atualização de informações
