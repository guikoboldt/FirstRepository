// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace RestaurantApp.Voting.AcceptanceTests.UserStories
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class Estoria2_OMesmoRestauranteNaoPodeSerEscolhidoMaisDeUmaVezDuranteASemana_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Estoria-2 Limite de Repetição Semanal de Restaurante.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Estória 2 - O mesmo restaurante não pode ser escolhido mais de uma vez durante a " +
                    "semana.", "      Eu como facilitador do processo de votação\r\n      Quero que um restaurante " +
                    "não possa ser repetido durante a semana\r\n      Para que não precise ouvir reclam" +
                    "ações infinitas!", ProgrammingLanguage.CSharp, new string[] {
                        "requires_database"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Estória 2 - O mesmo restaurante não pode ser escolhido mais de uma vez durante a " +
                            "semana.")))
            {
                RestaurantApp.Voting.AcceptanceTests.UserStories.Estoria2_OMesmoRestauranteNaoPodeSerEscolhidoMaisDeUmaVezDuranteASemana_Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("O mesmo restaurante não deve poder ser escolhido mais de uma vez durante a semana" +
            ".")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Estória 2 - O mesmo restaurante não pode ser escolhido mais de uma vez durante a " +
            "semana.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("requires_database")]
        public virtual void OMesmoRestauranteNaoDevePoderSerEscolhidoMaisDeUmaVezDuranteASemana_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("O mesmo restaurante não deve poder ser escolhido mais de uma vez durante a semana" +
                    ".", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
        testRunner.Given("os seguintes profissionais: Aderopo, Paulo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dados ");
#line 9
        testRunner.Given("os seguintes restaurantes: Pallato, Badoo, Pizza Hut, Arizona", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dados ");
#line 10
        testRunner.Given("que o \'Aderopo\' votou no restaurante \'Badoo\' \'ontem\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
        testRunner.Then("os restaurantes elegíveis \'hoje\' deveriam ser: Pallato, Pizza Hut, Arizona", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void OMesmoRestauranteNaoDevePoderSerEscolhidoMaisDeUmaVezDuranteASemanaAlternativa_(string restaurantes, string profissionais, string eleitor, string votado, string data_Voto_Passado, string data_Consulta, string disponiveis_Para_Votacao, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("O mesmo restaurante não deve poder ser escolhido mais de uma vez durante a semana" +
                    "(alternativa).", exampleTags);
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
        testRunner.Given(string.Format("os seguintes profissionais: {0}", profissionais), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dados ");
#line 15
        testRunner.Given(string.Format("os seguintes restaurantes: {0}", restaurantes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dados ");
#line 16
        testRunner.Given(string.Format("que o \'{0}\' votou no restaurante \'{1}\' \'{2}\'", eleitor, votado, data_Voto_Passado), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 17
        testRunner.Then(string.Format("os restaurantes elegíveis \'{0}\' deveriam ser: {1}", data_Consulta, disponiveis_Para_Votacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("O mesmo restaurante não deve poder ser escolhido mais de uma vez durante a semana" +
            "(alternativa).")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Estória 2 - O mesmo restaurante não pode ser escolhido mais de uma vez durante a " +
            "semana.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("requires_database")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:restaurantes", "Big E, Plazza, Calibu, Bellview")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:profissionais", "Aderopo, Paulo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:eleitor", "paulo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:votado", "Bellview")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:data_voto_passado", "ontem")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:data_consulta", "hoje")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:disponíveis_para_votação", "Big E, Plazza, Calibu")]
        public virtual void OMesmoRestauranteNaoDevePoderSerEscolhidoMaisDeUmaVezDuranteASemanaAlternativa__Variant0()
        {
            this.OMesmoRestauranteNaoDevePoderSerEscolhidoMaisDeUmaVezDuranteASemanaAlternativa_("Big E, Plazza, Calibu, Bellview", "Aderopo, Paulo", "paulo", "Bellview", "ontem", "hoje", "Big E, Plazza, Calibu", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("O mesmo restaurante não deve poder ser escolhido mais de uma vez durante a semana" +
            "(alternativa).")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Estória 2 - O mesmo restaurante não pode ser escolhido mais de uma vez durante a " +
            "semana.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("requires_database")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:restaurantes", "Big E, Plazza, Calibu, Bellview")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:profissionais", "Aderopo, Paulo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:eleitor", "paulo")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:votado", "Bellview")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:data_voto_passado", "hoje")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:data_consulta", "hoje")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:disponíveis_para_votação", "Big E, Plazza, Calibu, Bellview")]
        public virtual void OMesmoRestauranteNaoDevePoderSerEscolhidoMaisDeUmaVezDuranteASemanaAlternativa__Variant1()
        {
            this.OMesmoRestauranteNaoDevePoderSerEscolhidoMaisDeUmaVezDuranteASemanaAlternativa_("Big E, Plazza, Calibu, Bellview", "Aderopo, Paulo", "paulo", "Bellview", "hoje", "hoje", "Big E, Plazza, Calibu, Bellview", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
